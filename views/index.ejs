<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Noble Evergreen</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/water.css@2/out/water.css">
    <style>
        .delete-btn {
            color: red;
            cursor: pointer;
            font-size: 16px;
        }
    </style>
</head>
<body>
    <h1>Generate new receipt</h1>
    <form action="/bill" method="post">
        <label for="name">Customer Name<span style="color: red;">*</span></label>
        <input type="text" name="customer_name" required="true" placeholder="Enter the customer name">

        <label for="number">Contact Number<span style="color: red;">*</span></label>
        <input type="number" name="customer_number" required="true" placeholder="Enter the customer contact number">
        
        <label for="date">Date:</label>
        <input type="date" id="date" name="date" readonly><br><br>

        <label for="time">Time:</label>
        <input type="time" id="time" name="time" readonly><br><br>

        <label for="specialist">Stylist under service:</label>
        <select name="specialist" id="specialist">
            <% staffMembers.forEach(function(staff) { %>
                <option value="<%= staff._id %>"><%= staff.name %> - <%= staff.jobTitle %></option>
            <% }); %>
        </select>

        <label for="hasMembership">Do you have a membership?</label>
        <input type="checkbox" id="hasMembership" name="hasMembership" onchange="toggleMembershipIDField()">

        <div id="membershipIDField" style="display: none;">
            <label for="membershipID">Membership ID:</label>
            <input type="text" id="membershipID" name="membershipID" placeholder="Enter your membership ID">
        </div>

        <div id="service-container">
            <!-- Placeholder for dynamically added service and price inputs -->
            <div class="service-item">
                <label for="services1">Service:</label>
                <input type="text" name="services1" required="true" placeholder="Enter the service">
                
                <label for="prices1">Price:</label>
                <input type="number" name="prices1" required="true" placeholder="Enter the price" readonly><br><br>
                
            </div>
        </div>
        <button type="button" onclick="addMore()">Add More</button><br><br>
        <button type="submit">Find</button>
        <label for="subtotal">Subtotal:</label>
        <input type="number" name="subtotal" id="subtotal" readonly>
        
    </form>
    <script>
        let services = [];  // Define services globally to ensure it's accessible
    
        window.onload = function() {
            updateDateTime(); // Set initial date and time
            setInterval(updateDateTime, 1000); // Update time every second
            setupEventListeners(); // Setup event listeners after the page has fully loaded
    
            // Fetch service data from the server
            fetch("/api/services")
                .then(response => response.json())
                .then(data => {
                    services = data;  // Store the fetched services globally
                })
                .catch(error => console.error('Error fetching services:', error));
        };
    
        function setupEventListeners() {
            const container = document.getElementById('service-container');
            container.addEventListener('input', function(e) {
                if (e.target.name.startsWith('services')) {
                    const index = e.target.name.match(/\d+/)[0];  // Extract the index from the name
                    const priceInput = document.querySelector(`[name='prices${index}']`);
                    const isMember = document.getElementById('hasMembership').checked;
                    const foundService = services.find(s => s.serviceName.toLowerCase() === e.target.value.toLowerCase());
    
                    if (foundService) {
                        priceInput.value = isMember ? foundService.membershipPrice : foundService.regularPrice;
                        updateSubtotal();
                    } else {
                        priceInput.value = '';  // Clear if no match found
                    }
                }
            });
        }
    
        function updateDateTime() {
            var today = new Date();
            var date = today.getFullYear() + '-' + (today.getMonth() + 1).toString().padStart(2, '0') + '-' + today.getDate().toString().padStart(2, '0');
            var time = today.getHours().toString().padStart(2, '0') + ':' + today.getMinutes().toString().padStart(2, '0');
    
            document.getElementById('date').value = date;
            document.getElementById('time').value = time;
        }
    
        function toggleMembershipIDField() {
            var checkbox = document.getElementById('hasMembership');
            var membershipField = document.getElementById('membershipIDField');
            membershipField.style.display = checkbox.checked ? 'block' : 'none';
        }
    
        // Initialize counter for unique input names
        let serviceCount = 1;
    
        // Function to add more service and price input fields
        function addMore() {
            var container = document.getElementById('service-container');
            serviceCount++;
            var newService = document.createElement('div');
            newService.classList.add('service-item');
            newService.innerHTML = `
                <label for="services${serviceCount}">Service:</label>
                <input type="text" name="services${serviceCount}" required="true" placeholder="Enter the service">
                    
                <label for="prices${serviceCount}">Price:</label>
                <input type="number" name="prices${serviceCount}" required="true" readonly><br><br>
                <span class="delete-btn" onclick="removeService(this)">&#128465;</span><br><br>
            `;
            container.appendChild(newService);
        }
    
        function removeService(element) {
            element.parentNode.remove();
            updateSubtotal();
        }
    
        function updateSubtotal() {
            const priceInputs = document.querySelectorAll('[name^="prices"]');
            const subtotal = Array.from(priceInputs).reduce((total, input) => {
                return total + (parseFloat(input.value) || 0);
            }, 0);
            document.getElementById('subtotal').value = subtotal.toFixed(2);
        }
    </script>
    
    
</body>
</html>