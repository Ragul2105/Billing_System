<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Noble Evergreen</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/water.css@2/out/water.css">
    <style>
        .delete-btn {
            color: red;
            cursor: pointer;
            font-size: 16px;
        }
    </style>
</head>
<body>
    <h1>Generate new receipt</h1>
    <form action="/bill" method="post">
        <!-- Customer Name and Contact Number -->
        <label for="name">Customer Name<span style="color: red;">*</span></label>
        <input type="text" name="customer_name" id="customerName" required placeholder="Enter the customer name" oninput="fetchClientDetails()">

        <label for="number">Contact Number<span style="color: red;">*</span></label>
        <input type="number" name="customer_number" id="customerNumber" required placeholder="Enter the customer contact number" oninput="fetchClientDetails()">
        
        <!-- Client 360° Section -->
        <div id="clientDetails">
            <h3>Client 360°</h3>
            <p>Customer Type: <span id="customerType">-</span></p>
            <p>Last Visit: <span id="lastVisit">-</span></p>
            <p>Total Visits: <span id="totalVisits">-</span></p>
            <p>Total Spendings: <span id="totalSpendings">-</span> INR</p>
            <p>Membership: <span id="membershipStatus">-</span></p>
        </div>

        <label for="date">Date:</label>
        <input type="date" id="date" name="date" readonly><br><br>

        <label for="time">Time:</label>
        <input type="time" id="time" name="time" readonly><br><br>

        <!-- Gender Field -->
        <label for="gender">Gender:</label>
        <select name="gender" id="gender" required>
            <option value="Male">Male</option>
            <option value="Female">Female</option>
            <option value="Other">Other</option>
        </select><br><br>

        <!-- Membership Checkbox and Field -->
        <label for="hasMembership">Do you have a membership?</label>
        <input type="checkbox" id="hasMembership" name="hasMembership" onchange="toggleMembershipIDField()">

        <div id="membershipIDField" style="display: none;">
            <label for="membershipID">Membership ID:</label>
            <input type="text" id="membershipID" name="membershipID" placeholder="Enter your membership ID" onblur="validateMembershipID()">
            <small id="membershipMessage" style="color: red;"></small>
        </div>

        <!-- Services Section -->
        <div id="service-container">
            <div class="service-item">
                <label for="services1">Service:</label>
                <input type="text" list="serviceList1" name="services1" required placeholder="Enter the service" oninput="filterServices(this)">
                
                <!-- Datalist for services -->
                <datalist id="serviceList1">
                    <% services.forEach(function(service) { %>
                        <option value="<%= service.serviceName %>"><%= service.serviceName %> - ₹<%= service.regularPrice %> (Member: ₹<%= service.membershipPrice %>)</option>
                    <% }); %>
                </datalist>

                <label for="prices1">Price:</label>
                <input type="number" name="prices1" required readonly><br><br>

                <label for="stylist1">Stylist under service:</label>
                <select name="stylist1" required>
                    <% staffMembers.forEach(function(staff) { %>
                        <option value="<%= staff._id %>"><%= staff.name %> - <%= staff.jobTitle %></option>
                    <% }); %>
                </select><br><br>

                <label for="startTime1">Start Time:</label>
                <input type="time" name="startTime1" required><br><br>

                <label for="endTime1">End Time:</label>
                <input type="time" name="endTime1" required><br><br>
            </div>
        </div>
        
        <button type="button" onclick="addMore()">Add More</button><br><br>
        
        <label for="subtotal">Subtotal:</label>
        <input type="number" name="subtotal" id="subtotal" readonly><br><br>

        <!-- Discount and Grand Total Fields -->
        <label for="discount">Discount (%):</label>
        <input type="number" name="discount" id="discount" placeholder="Enter discount percentage" oninput="calculateGrandTotal()"><br><br>

        <label for="grandTotal">Grand Total:</label>
        <input type="number" name="grandTotal" id="grandTotal" readonly><br><br>
        <button type="submit">Generate Bill</button>
    </form>

    <script>
        let services = [];
        let serviceCount = 1;

        window.onload = function() {
            updateDateTime();
            setInterval(updateDateTime, 1000);
            setupEventListeners();

            // Fetch service data from the server
            fetch("/api/services")
                .then(response => response.json())
                .then(data => { services = data; })
                .catch(error => console.error('Error fetching services:', error));
        };

        function setupEventListeners() {
            const container = document.getElementById('service-container');
            const isMember = document.getElementById('hasMembership').checked;

            container.addEventListener('input', function(e) {
                if (e.target.name.startsWith('services')) {
                    const index = e.target.name.match(/\d+/)[0];
                    const priceInput = document.querySelector([name='prices${index}']);

                    const selectedService = services.find(service => service.serviceName.toLowerCase() === e.target.value.toLowerCase());

                    if (selectedService) {
                        priceInput.value = isMember ? selectedService.membershipPrice : selectedService.regularPrice;
                        updateSubtotal();
                    } else {
                        priceInput.value = '';
                    }
                }
            });
        }

        function filterServices(input) {
            const index = input.name.match(/\d+/)[0];
            const listId = `serviceList${index}`;
            const datalist = document.getElementById(listId);
            
            // Clear existing options
            datalist.innerHTML = '';

            const searchText = input.value.toLowerCase();

            services.forEach(service => {
                if (service.serviceName.toLowerCase().includes(searchText)) {
                    const option = document.createElement('option');
                    option.value = service.serviceName;
                    option.textContent = `${service.serviceName} - ₹${service.regularPrice} (Member: ₹${service.membershipPrice})`;
                    datalist.appendChild(option);
                }
            });
        }

        function updateDateTime() {
            const today = new Date();
            const date = today.getFullYear() + '-' + (today.getMonth() + 1).toString().padStart(2, '0') + '-' + today.getDate().toString().padStart(2, '0');
            const time = today.getHours().toString().padStart(2, '0') + ':' + today.getMinutes().toString().padStart(2, '0');
            document.getElementById('date').value = date;
            document.getElementById('time').value = time;
        }

        function toggleMembershipIDField() {
            const checkbox = document.getElementById('hasMembership');
            const membershipField = document.getElementById('membershipIDField');
            membershipField.style.display = checkbox.checked ? 'block' : 'none';

        }

        function addMore() {
            const container = document.getElementById('service-container');
            serviceCount++;
            const newService = document.createElement('div');
            newService.classList.add('service-item');
            newService.innerHTML = `
                <label for="services${serviceCount}">Service:</label>
                <input type="text" name="services${serviceCount}" required placeholder="Enter the service">

                <label for="prices${serviceCount}">Price:</label>
                <input type="number" name="prices${serviceCount}" required readonly><br><br>

                <label for="stylist${serviceCount}">Stylist under service:</label>
                <select name="stylist${serviceCount}" required>
                    <% staffMembers.forEach(function(staff) { %>
                        <option value="<%= staff._id %>"><%= staff.name %> - <%= staff.jobTitle %></option>
                    <% }); %>
                </select><br><br>

                <label for="startTime${serviceCount}">Start Time:</label>
                <input type="time" name="startTime${serviceCount}" required><br><br>

                <label for="endTime${serviceCount}">End Time:</label>
                <input type="time" name="endTime${serviceCount}" required><br><br>

                <span class="delete-btn" onclick="removeService(this)">&#128465;</span><br><br>
            `;
            container.appendChild(newService);
        }

        function removeService(element) {
            element.parentNode.remove();
            updateSubtotal();
        }

        function updateSubtotal() {
            const priceInputs = document.querySelectorAll('[name^="prices"]');
            const subtotal = Array.from(priceInputs).reduce((total, input) => {
                return total + (parseFloat(input.value) || 0);
            }, 0);
            document.getElementById('subtotal').value = subtotal.toFixed(2);
        }

        function validateMembershipID() {
            const membershipID = document.getElementById('membershipID').value;
            const messageDisplay = document.getElementById('membershipMessage');

            fetch('/validate-membership', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ membershipID })
            })
            .then(response => response.json())
            .then(data => {
                messageDisplay.textContent = data.message;
                messageDisplay.style.color = data.message === 'Valid membership ID' ? 'green' : 'red';
            })
            .catch(error => {
                console.error('Error:', error);
                messageDisplay.textContent = 'Error checking membership ID';
                messageDisplay.style.color = 'red';
            });
        }

        document.getElementById('membershipID').addEventListener('blur', validateMembershipID);

            
        async function fetchClientDetails() {
            const name = document.getElementById('customerName').value;
            const number = document.getElementById('customerNumber').value;

            if (name && number) {
                try {
                    const response = await fetch('/search-customer', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ customerName: name, customerNumber: number })
                    });
                    const data = await response.json();

                    if (data.success) {
                        document.getElementById('customerType').textContent = data.customerType || '-';
                        document.getElementById('lastVisit').textContent = data.lastVisit || '-';
                        document.getElementById('totalVisits').textContent = data.visits || '-';
                        document.getElementById('totalSpendings').textContent = data.totalSpent || '-';
                        document.getElementById('membershipStatus').textContent = data.membership || '-';
                    } else {
                        resetClientDetails();
                    }
                } catch (error) {
                    console.error('Error fetching client details:', error);
                    resetClientDetails();
                }
            } else {
                resetClientDetails();
            }
        }

        function resetClientDetails() {
            document.getElementById('customerType').textContent = '-';
            document.getElementById('lastVisit').textContent = '-';
            document.getElementById('totalVisits').textContent = '-';
            document.getElementById('totalSpendings').textContent = '-';
            document.getElementById('membershipStatus').textContent = '-';
        }

        function calculateGrandTotal() {
            const subtotal = parseFloat(document.getElementById('subtotal').value) || 0;
            const discount = parseFloat(document.getElementById('discount').value) || 0;
            const grandTotal = subtotal - (subtotal * (discount / 100));
            document.getElementById('grandTotal').value = grandTotal.toFixed(2);
        }

        function updateSubtotal() {
            const priceInputs = document.querySelectorAll('[name^="prices"]');
            const subtotal = Array.from(priceInputs).reduce((total, input) => {
                return total + (parseFloat(input.value) || 0);
            }, 0);
            document.getElementById('subtotal').value = subtotal.toFixed(2);
            calculateGrandTotal(); // Recalculate the grand total when subtotal changes
        }

    </script>
</body>
</html>
