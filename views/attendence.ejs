<!DOCTYPE html>
<html>
<head>
    <title>Mark Attendance</title>
    <link rel="icon" href="/images/logo 3-square.png" type="image/x-icon">
    <style>
        .attendance-container {
            text-align: center;
            margin: 20px;
            padding: 20px;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        #status {
            margin: 20px;
            font-weight: bold;
            color: #333;
        }
        .qr-input {
            padding: 10px;
            margin: 10px;
            width: 200px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        .submit-btn {
            padding: 10px 20px;
            background: #007bff;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .submit-btn:hover {
            background: #0056b3;
        }
        .error-message {
            color: red;
            margin: 10px 0;
        }
        .success-message {
            color: green;
            margin: 10px 0;
        }
    </style>
</head>
<body>
    <%- include('partials/staffnavbar') %>
    <div class="attendance-container">
        <h2>Mark Your Attendance</h2>
        <p>Get today's QR code from the admin and enter it below:</p>
        <!-- Add hidden input for staffId -->
        <input type="hidden" id="staffId" value="<%= staffId %>">
        <input 
            type="text" 
            id="qrInput" 
            class="qr-input"
            placeholder="Enter QR Code"
            autocomplete="off"
        >
        <button onclick="markAttendance()" class="submit-btn">Submit</button>
        <div id="status"></div>
    </div>

    <script>
        async function getLocation() {
            return new Promise((resolve, reject) => {
                if (!navigator.geolocation) {
                    reject(new Error('Geolocation is not supported by your browser'));
                    return;
                }

                const options = {
                    enableHighAccuracy: true,
                    timeout: 10000,  // 10 seconds
                    maximumAge: 0    // Force fresh location
                };

                const successCallback = (position) => {
                    resolve({
                        coords: {
                            latitude: position.coords.latitude,
                            longitude: position.coords.longitude,
                            accuracy: position.coords.accuracy
                        },
                        timestamp: position.timestamp
                    });
                };

                const errorCallback = (error) => {
                    let errorMessage;
                    switch (error.code) {
                        case error.PERMISSION_DENIED:
                            errorMessage = 'Location permission denied';
                            break;
                        case error.POSITION_UNAVAILABLE:
                            errorMessage = 'Location information unavailable';
                            break;
                        case error.TIMEOUT:
                            errorMessage = 'Location request timed out';
                            break;
                        default:
                            errorMessage = 'Unknown error occurred getting location';
                    }
                    reject(new Error(errorMessage));
                };

                navigator.geolocation.getCurrentPosition(
                    successCallback,
                    errorCallback,
                    options
                );
            });
        }

        async function markAttendance() {
            try {
                const qrCode = document.getElementById('qrInput').value;
                const staffId = document.getElementById('staffId').value;

                if (!qrCode) {
                    document.getElementById('status').textContent = 'Please enter QR code';
                    document.getElementById('status').className = 'error-message';
                    return;
                }

                if (!staffId) {
                    document.getElementById('status').textContent = 'Staff ID not found';
                    document.getElementById('status').className = 'error-message';
                    return;
                }

                // Get location
                const position = await getLocation();

                const attendance = {
                    staffId,
                    location: {
                        latitude: position.coords.latitude,
                        longitude: position.coords.longitude
                    },
                    qrCode
                };

                console.log

                const response = await fetch('/attendance/check-in', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(attendance)
                });

                const result = await response.json();
                const status = document.getElementById('status');
                status.textContent = result.message;
                status.className = result.success ? 'success-message' : 'error-message';

                if (result.success) {
                    document.getElementById('qrInput').value = '';
                }
            } catch (error) {
                const status = document.getElementById('status');
                status.textContent = 'Error: ' + (error.message || 'Unable to mark attendance');
                status.className = 'error-message';
            }
        }
    </script>
</body>
</html>